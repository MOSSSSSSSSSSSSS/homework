/* 2253209 刘佳朋 信07 */

#include <cstdio>   //NULL
//不再允许包含任何系统头文件

/* ----- 不允许定义任何形式的全局变量/全部数组/只读全局变量/宏定义!!!!! ----- */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return只是一个示例，可改变 */
/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    const char* p = str;
    if (str == 0)
    {
        return 0;
    }
    for (;; str++)
    {
        if (*str == '\0')
        {
            return str - p;
        }
        else
        {
            continue;
        }
    }
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strcat(char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    char* p = s1;
    if (s2 != 0 && s1 != 0)
    {
        for (;; s1++)
        {
            if (*s1 == '\0')
            {
                break;
            }
        }
        for (;; s1++, s2++)
        {
            *s1 = *s2;
            if (*s2 == '\0')
            {
                break;
            }
        }
    }

    return p;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strncat(char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    char* p = s1;
    const char* p2 = s2;
    if (s1 != 0 && s2 != 0)
    {
        for (;; s1++)
        {
            if (*s1 == '\0')
            {
                break;
            }
        }
        if (len > tj_strlen(s2))
        {
            for (;; s1++, s2++)
            {
                *s1 = *s2;
                if (*s2 == '\0')
                {
                    break;
                }
            }
        }
        else
        {
            for (;s2-p2<len ; s1++, s2++)
            {
                *s1 = *s2;
            }
            *s1 = '\0';
        }
    }

    return p;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strcpy(char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    char* p = s1;
    if (s1 != 0 && s2 != 0)
    {
        for (;; s1++, s2++)
        {
            *s1 = *s2;
            if (*s2 == '\0')
            {
                break;
            }
        }
    }
    else if (s1 != 0 && s2 == 0)
    {
        *s1 = '\0';
    }

    return p;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strncpy(char *s1, const char *s2, const int len)
{
    char* p = s1;
    if (s1 != 0 && s2 != 0)
    {
        if (len > tj_strlen(s2))
        {
            for (; *s2 != '\0'; s1++, s2++)
            {
                *s1 = *s2;
            }
        }
        else
        {
            for (; s1 - p < len; s1++, s2++)
            {
                *s1 = *s2;
            }
        }


    }

    return p;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a = 0;
    if (s1 != 0 && s2 != 0)
    {
        for (;; s1++, s2++)
        {
            if (*s1 != *s2)
            {
                a = *s1 - *s2;
                break;
            }
            else
            {
                if (*s1 == '\0' && *s2 == '\0')
                {
                    break;
                }
            }
        }
    }
    else if (s1 != 0 && s2 == 0)
    {
        return 1;
    }
    else if (s1 == 0 && s2 != 0)
    {
        return -1;
    }
    else
    {
        return 0;
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char *s1, const char *s2)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a = 0;
    if (s1 != 0 && s2 != 0)
    {
        for (;; s1++, s2++)
        {
            if (*s1 != *s2)
            {
                if (*s1 >= 'A' && *s1 <= 'Z')
                {
                    if (*s2 >= 'A' && *s2 <= 'Z')
                    {
                        a = *s1 - *s2;
                    }
                    else
                    {
                        a = *s1 - *s2 + 32;
                    }
                }
                else
                {
                    if (*s2 >= 'A' && *s2 <= 'Z')
                    {
                        a = *s1 - *s2 - 32;
                    }
                    else
                    {
                        a = *s1 - *s2;
                    }
                }
                if (a != 0)
                {
                    break;
                }
            }
            else
            {
                if (*s1 == '\0' && *s2 == '\0')
                {
                    break;
                }
            }
        }
    }
    else if (s1 != 0 && s2 == 0)
    {
        return 1;
    }
    else if (s1 == 0 && s2 != 0)
    {
        return -1;
    }
    else
    {
        return 0;
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a=0;
    const char* p = s1;
    if (s1 != 0 && s2 != 0)
    {
        if (len > ((tj_strlen(s1) < tj_strlen(s2)) ? tj_strlen(s1) : tj_strlen(s2)))
        {
            for (;; s1++, s2++)
            {
                if (*s1 != *s2)
                {
                    a = *s1 - *s2;
                    break;
                }
                else
                {
                    if (*s1 == '\0')
                    {
                        break;
                    }
                }
            }
        }
        else
        {
            for (; s1 - p < len; s1++, s2++)
            {
                if (*s1 != *s2)
                {
                    a = *s1 - *s2;
                    break;
                }
            }
        }
    }
    else if (s1 != 0 && s2 == 0)
    {
        return 1;
    }
    else if (s1 == 0 && s2 != 0)
    {
        return -1;
    }
    else
    {
        return 0;
    }


    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char *s1, const char *s2, const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a = 0;
    const char* p = s1;
    if (s1 != 0 && s2 != 0)
    {
        if (len > ((tj_strlen(s1) < tj_strlen(s2)) ? tj_strlen(s1) : tj_strlen(s2)))
        {
            for (;; s1++, s2++)
            {
                if (*s1 != *s2)
                {
                    if (*s1 >= 'A' && *s1 <= 'Z')
                    {
                        if (*s2 >= 'A' && *s2 <= 'Z')
                        {
                            a = *s1 - *s2;
                        }
                        else
                        {
                            a = *s1 - *s2 + 32;
                        }
                    }
                    else
                    {
                        if (*s2 >= 'A' && *s2 <= 'Z')
                        {
                            a = *s1 - *s2 - 32;
                        }
                        else
                        {
                            a = *s1 - *s2;
                        }
                    }
                    if (a != 0)
                    {
                        break;
                    }
                }
                else
                {
                    if (*s1 == '\0')
                    {
                        break;
                    }
                }
            }
        }
        else
        {
            for (; s1 - p < len; s1++, s2++)
            {
                if (*s1 != *s2)
                {
                    if (*s1 >= 'A' && *s1 <= 'Z')
                    {
                        if (*s2 >= 'A' && *s2 <= 'Z')
                        {
                            a = *s1 - *s2;
                        }
                        else
                        {
                            a = *s1 - *s2 + 32;
                        }
                    }
                    else
                    {
                        if (*s2 >= 'A' && *s2 <= 'Z')
                        {
                            a = *s1 - *s2 - 32;
                        }
                        else
                        {
                            a = *s1 - *s2;
                        }
                    }
                    if (a != 0)
                    {
                        break;
                    }
                }
            }
        }
    }
    else if (s1 != 0 && s2 == 0)
    {
        return 1;
    }
    else if (s1 == 0 && s2 != 0)
    {
        return -1;
    }
    else
    {
        return 0;
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strupr(char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    char* p = str;
    if (str != 0)
    {
        for (; *str != '\0'; str++)
        {
            if (*str >= 'a' && *str <= 'z')
            {
                *str -= 32;
            }
        }
    }
    else
    {
        return 0;
    }

    return p;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strlwr(char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    char* p = str;
    if (str != 0)
    {
        for (; *str != '\0'; str++)
        {
            if (*str >= 'A' && *str <= 'Z')
            {
                *str += 32;
            }
        }
    }
    else
    {
        return 0;
    }

    return p;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char *str, const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a = 0;
    const char* p = str;
    if (str != 0)
    {
        for (; *str != '\0'; str++)
        {
            if (*str == ch)
            {
                a = str - p + 1;
                break;
            }
        }
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char *str, const char *substr)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a=0;
    const char* p1 = str;
    const char* p2 = substr;
    const char* p3 = NULL;
    if (substr != 0&&str!=0)
    {
        for (; *str != '\0';)
        {
            if (*str == *substr)
            {
                if (substr == p2)
                {
                    p3 = str;
                }
                str++;
                substr++;
                if (*str == *substr && *str == '\0')
                {
                    a = p3 - p1 + 1;
                }
            }
            else
            {
                if (*substr == '\0')
                {
                    a = str - p1 - (substr - p2) + 1;
                    break;
                }
                else
                {
                    if (p3)
                    {
                        str = ++p3;
                        p3 = NULL;
                    }
                    else
                    {
                        str++;
                    }
                    substr = p2;
                }
            }
        }
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char *str, const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a = 0;
    const char* p = str;
    if (str != 0)
    {
        for (;; str++)
        {
            if (*str == '\0')
            {
                break;
            }
        }
        str--;
        for (; str >= p; str--)
        {
            if (*str == ch)
            {
                a = str - p + 1;
                break;
            }
        }
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char *str, const char *substr)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int a = 0;
    const char* p1 = substr;
    const char* p2 = str;
    const char* p3;
    const char* p4=NULL;
    if (str != 0 && substr != 0)
    {
        for (;; str++)
        {
            if (*str == '\0')
            {
                str--;
                break;
            }
        }
        for (;; substr++)
        {
            if (*substr == '\0')
            {
                substr--;
                p3 = substr;
                break;
            }
        }
        for (; str >= p2 && substr >= p1;)
        {
            if (*str == *substr)
            {
                ++substr;
                if (*substr == '\0')
                {
                    p4 = str;
                }
                substr--;
                if (substr == p1)
                {
                    a = str - p2 + 1;
                }
                str--;
                substr--;
            }
            else
            {
                substr = p3;
                if (p4)
                {
                    str = --p4;
                    p4 = NULL;
                }
                else
                {
                    str--;
                }
            }
        }
    }
    else
    {
        return 0;
    }

    return a;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
char *tj_strrev(char *str)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    char* pp = str;
    char* p = str;
    if (str != 0)
    {
        for (;; str++)
        {
            if (*str == '\0')
            {
                break;
            }
        }
        str--;
        for (; str > p; p++, str--)
        {
            char temp = *p;
            *p = *str;
            *str = temp;
        }
    }
    else
    {
        return 0;
    }

    return pp;
}
